<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-11-24T13:11:21+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Ptrade之家</title><subtitle>Ptrade量化交易入门教程、开户、代写量化交易策略</subtitle><author><name>Zhu</name><email>pub@azhu.site</email></author><entry><title type="html">无法通过send_qywx函数发送企业微信消息</title><link href="http://localhost:4000/faq/wecom-message" rel="alternate" type="text/html" title="无法通过send_qywx函数发送企业微信消息" /><published>2023-04-21T19:50:30+08:00</published><updated>2023-04-21T19:50:30+08:00</updated><id>http://localhost:4000/faq/wecom-message</id><content type="html" xml:base="http://localhost:4000/faq/wecom-message"><![CDATA[（文章编辑中）

<b>问题：</b>

&emsp;&emsp;使用Ptrade内置的send_qywx函数向自己的企业微信账号发送消息，Ptrade终端显示“企业微信消息发送成功”，但实际上企业微信收不到消息。

（相关链接：<a href="http://121.41.137.161:9091/hub/help/api#send_qywx" target="_blank">API文档 - send_qywx发送企业微信信息</a>）

<br>
<b>原因</b>：

&emsp;&emsp;阿猪测试了三家券商，都存在前述问题。阿猪推测应该是send_qywx函数已经和现在的企业微信不兼容了。

<br>
<b>解决方法</b>：

<b>一、自己写代码替代send_qywx</b>

1、获取Ptrade服务器的IP地址

&emsp;&emsp;新建一个策略，写入如下代码，记得将Corpid、Secret、Agentid替换成你自己的。

（相关链接：<a href="https://open.work.weixin.qq.com/wwopen/helpguide/detail?t=selfBuildApp" target="_blank">企业自建应用</a>）
```
import requests, json, datetime

def initialize(context): #初始化模块，每次启动策略时触发执行一次
    pass

def before_trading_start(context, data): #每个交易日开盘前触发执行一次
    Content = str(datetime.datetime.now())    # 消息内容，可随意替换
    Status = SendMessage(msg)  #运行SendMessage函数
    print(Status)   #显示SendMessage函数返回的结果

def SendMessage(msg):
    #生成Token
    Corpid = '替换为你的企业ID'
    Secret = '替换为你的自建应用密钥'
    Agentid = '替换为你的自建应用Agentid'
    Url = "https://qyapi.weixin.qq.com/cgi-bin/gettoken"
    Data = {"corpid": Corpid, "corpsecret": Secret}
    r = requests.get(url=Url, params=Data, verify=False)
    #print(r.json())

    if r.json()['errcode'] != 0:
        return False
    else:
        Token = r.json()['access_token']

    Partyid = '1'    #部门id，根据你的实际情况替换
    Subject = '企业自建应用消息测试'    # 消息标题，可随意替换
    
    # 发送消息
    Url = "https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=%s" % Token
    Data = {"toparty": Partyid, "msgtype": "text", "agentid": Agentid, "text": {"content": Subject + '\n' + msg}, "safe": "0"}
    r = requests.post(url=Url, data=json.dumps(Data), verify=False)
    return r.json()
```
&emsp;&emsp;运行这个策略，Ptrade终端会显示如下报错信息。这表明Ptrade服务器与企业微信服务器的通信正常，但是Ptrade服务器的IP不在企业微信服务器的白名单内，被企业微信拒绝了。记住这个红框内的字符串，它就是Ptrade服务器的IP地址，后边会用到。
<div  align="center"><img src="/assets/posts_img/20230328_01.webp" alt="" width="600" height=auto/></div>
<br>
2、设置可信域名

&emsp;&emsp;在电脑浏览器中登录企业微信的管理后台，依次点击“应用”-你用于发送通知的自建应用，进入自建应用的管理界面。我们的目的是将Ptrade服务器的IP地址添加入“企业可信IP”名单中。

&emsp;&emsp;如果直接点击“企业可信IP”的“配置”，会提示“请先设置可信域名”，所以需要先设置可信域名。（相关阅读：企业内部开发配置域名指引）

&emsp;&emsp;如果你没有自己的域名，可以随便找一个免费的虚拟主机、函数计算应用，一般都会自带二级或多级域名，只要域名没有被企业微信屏蔽就可以用。因为免费服务不稳定，资源有时效性，所以阿猪不打算专门写教程，具体方法请大家自行百度。
<div  align="center"><img src="/assets/posts_img/20230328_02.webp" alt="" width="600" height=auto/></div>
<br>
3、设置可信IP

&emsp;&emsp;可信域名设置成功后，就可以继续设置可信IP了。点击“企业可信IP”中的“配置”，然后将前边得到的Ptrade服务器IP复制进来，再点击“确定”就可以了。

&emsp;&emsp;在阿猪测试的三家券商中，有两家添加可信IP后就可以正常从Ptrade发送企业微信消息了，有一家添加可信IP时提示“IP属于第三方服务商”，无法在自建应用中使用。对于后者，从技术层面讲是可以解决的，但是在操作层面涉及到券商的配合问题，可行性较差。而且我们的主要目的是用策略赚钱，而不是搞技术研究，所以不再深入讨论，感兴趣的读者可以参考企业可信IP配置指引自行研究。
<div  align="center"><img src="/assets/posts_img/20230328_03.webp" alt="" width="600" height=auto/></div>
<br>
4、在策略中加入消息发送模块

&emsp;&emsp;既然Ptrade内置的send_qywx函数已经失效，那我们就得自己写代码来替代。其实前边的代码就是一个完整的示例代码，只要替换成你的id和密钥就可以正常使用。

&emsp;&emsp;读者可以根据自己的需要在适当的时候调用SendMessage函数。例如我们想在下单后向企业微信发送成交结果，只需把成交结果作为参数传递给SendMessage函数就可以了。

<br>
<b>二、使用替代方案</b>

&emsp;&emsp;如果嫌上边的方法麻烦，或者遇到券商的IP无法设为可信IP的情形，可以尝试下边的方法作为替代方案。

<b>1、使用email</b>

（1）使用Ptrade内置的send_email函数

&emsp;&emsp;关于send_email函数的使用方法，读者可以参考API文档中的send_email - 发送邮箱信息。

（2）使用python内置的smtplib等模块

&emsp;&emsp;关于使用python内置模块实现发送email的方法，请读者先自行百度，后续阿猪会考虑在入门教程或者FAQ中专门写一篇文章来介绍。

<b>2、使用企业微信的群机器人</b>

&emsp;&emsp;是的，你没看错，又是通过企业微信。只不过这里不是使用企业自建应用发送消息，而是通过企业微信群的机器人来发送消息，“秘诀”就在于通过群机器人发送消息不受IP限制。

（1）创建一个企业微信群

（2）添加一个群机器人

（3）获取token

（4）在策略中加入消息发送模块]]></content><author><name>Zhu</name><email>pub@azhu.site</email></author><category term="faq" /><summary type="html"><![CDATA[（文章编辑中） 问题：   使用Ptrade内置的send_qywx函数向自己的企业微信账号发送消息，Ptrade终端显示“企业微信消息发送成功”，但实际上企业微信收不到消息。 （相关链接：API文档 - send_qywx发送企业微信信息） 原因：   阿猪测试了三家券商，都存在前述问题。阿猪推测应该是send_qywx函数已经和现在的企业微信不兼容了。 解决方法： 一、自己写代码替代send_qywx 1、获取Ptrade服务器的IP地址   新建一个策略，写入如下代码，记得将Corpid、Secret、Agentid替换成你自己的。 （相关链接：企业自建应用） import requests, json, datetime def initialize(context): #初始化模块，每次启动策略时触发执行一次 pass def before_trading_start(context, data): #每个交易日开盘前触发执行一次 Content = str(datetime.datetime.now()) # 消息内容，可随意替换 Status = SendMessage(msg) #运行SendMessage函数 print(Status) #显示SendMessage函数返回的结果 def SendMessage(msg): #生成Token Corpid = '替换为你的企业ID' Secret = '替换为你的自建应用密钥' Agentid = '替换为你的自建应用Agentid' Url = "https://qyapi.weixin.qq.com/cgi-bin/gettoken" Data = {"corpid": Corpid, "corpsecret": Secret} r = requests.get(url=Url, params=Data, verify=False) #print(r.json()) if r.json()['errcode'] != 0: return False else: Token = r.json()['access_token'] Partyid = '1' #部门id，根据你的实际情况替换 Subject = '企业自建应用消息测试' # 消息标题，可随意替换 # 发送消息 Url = "https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=%s" % Token Data = {"toparty": Partyid, "msgtype": "text", "agentid": Agentid, "text": {"content": Subject + '\n' + msg}, "safe": "0"} r = requests.post(url=Url, data=json.dumps(Data), verify=False) return r.json()   运行这个策略，Ptrade终端会显示如下报错信息。这表明Ptrade服务器与企业微信服务器的通信正常，但是Ptrade服务器的IP不在企业微信服务器的白名单内，被企业微信拒绝了。记住这个红框内的字符串，它就是Ptrade服务器的IP地址，后边会用到。 2、设置可信域名   在电脑浏览器中登录企业微信的管理后台，依次点击“应用”-你用于发送通知的自建应用，进入自建应用的管理界面。我们的目的是将Ptrade服务器的IP地址添加入“企业可信IP”名单中。   如果直接点击“企业可信IP”的“配置”，会提示“请先设置可信域名”，所以需要先设置可信域名。（相关阅读：企业内部开发配置域名指引）   如果你没有自己的域名，可以随便找一个免费的虚拟主机、函数计算应用，一般都会自带二级或多级域名，只要域名没有被企业微信屏蔽就可以用。因为免费服务不稳定，资源有时效性，所以阿猪不打算专门写教程，具体方法请大家自行百度。 3、设置可信IP   可信域名设置成功后，就可以继续设置可信IP了。点击“企业可信IP”中的“配置”，然后将前边得到的Ptrade服务器IP复制进来，再点击“确定”就可以了。   在阿猪测试的三家券商中，有两家添加可信IP后就可以正常从Ptrade发送企业微信消息了，有一家添加可信IP时提示“IP属于第三方服务商”，无法在自建应用中使用。对于后者，从技术层面讲是可以解决的，但是在操作层面涉及到券商的配合问题，可行性较差。而且我们的主要目的是用策略赚钱，而不是搞技术研究，所以不再深入讨论，感兴趣的读者可以参考企业可信IP配置指引自行研究。 4、在策略中加入消息发送模块   既然Ptrade内置的send_qywx函数已经失效，那我们就得自己写代码来替代。其实前边的代码就是一个完整的示例代码，只要替换成你的id和密钥就可以正常使用。   读者可以根据自己的需要在适当的时候调用SendMessage函数。例如我们想在下单后向企业微信发送成交结果，只需把成交结果作为参数传递给SendMessage函数就可以了。 二、使用替代方案   如果嫌上边的方法麻烦，或者遇到券商的IP无法设为可信IP的情形，可以尝试下边的方法作为替代方案。 1、使用email （1）使用Ptrade内置的send_email函数   关于send_email函数的使用方法，读者可以参考API文档中的send_email - 发送邮箱信息。 （2）使用python内置的smtplib等模块   关于使用python内置模块实现发送email的方法，请读者先自行百度，后续阿猪会考虑在入门教程或者FAQ中专门写一篇文章来介绍。 2、使用企业微信的群机器人   是的，你没看错，又是通过企业微信。只不过这里不是使用企业自建应用发送消息，而是通过企业微信群的机器人来发送消息，“秘诀”就在于通过群机器人发送消息不受IP限制。 （1）创建一个企业微信群 （2）添加一个群机器人 （3）获取token （4）在策略中加入消息发送模块]]></summary></entry><entry><title type="html">06、构思一个可以实盘交易的策略</title><link href="http://localhost:4000/tutorial/design-a-strategy" rel="alternate" type="text/html" title="06、构思一个可以实盘交易的策略" /><published>2023-03-29T00:00:01+08:00</published><updated>2023-03-29T00:00:01+08:00</updated><id>http://localhost:4000/tutorial/design-a-strategy</id><content type="html" xml:base="http://localhost:4000/tutorial/design-a-strategy"><![CDATA[　　经过前几篇文章的介绍，大家应该已经对Ptrade有了一些基本的了解。接下来让我们尝试构思一个可以真正用来实盘交易的策略。以下是阿猪总结的一些基本思路，供大家参考：

## 一、明确需求
　　编写量化交易策略的本质仍然是编写程序，所以在动手写代码之前应当先有明确的需求，否则在写代码的时候容易发半天呆却无从下手，或者想一出是一出，影响写代码的效率和代码的质量。

　　思考下边的两个问题，有助于让你明确自己的需求：

### 1、我希望赚的是什么钱

　　回答“赚什么钱”这个问题，可以帮助你明确自己的策略在大方向上属于哪种类型、什么风格（例如事件驱动、趋势跟随、均值回归、价值投资....）

　　阿猪认为在股市中赚钱主要有两条途径，一是通过价格变动赚钱，二是通过股息红利赚钱。

　　对于通过价格变动获利，阿猪认为从根本上可以分为如下两类：

(1)估值水平的变动带动股价的变动。举例如下：

　　在短期，题材炒作、重大的利好利空消息等，往往会导致投资者对某个板块或某只个股的估值偏好发生明显的变化，从而使股价发生大幅的波动。

　　在长期，市场估值偏好会产生周期性的变化，从而使股价产生周期性的波动；投资者会因长期看好/看衰某些行业而产生趋势性的估值偏好变化，从而在盈利水平给定的情况下，使股价产生趋势性的变化。

　　对于给定的行业，业内竞争力强的龙头公司往往会有一定的估值溢价。

(2)盈利水平的变动带动股价的变动。举例如下：

　　对于周期性的行业，行业内公司的盈利水平会呈现出周期性的变动，从而带动股价产生周期性的变动。

　　对于处于长期上升/衰退期间的行业，行业内的公司的盈利水平会呈现出趋势性的变换，从而在估值水平给定的情况下，带动股价产生趋势性的变化。

### 2、为了赚这个钱，我该如何构建相应的交易体系。

　　在大方向上明确了自己策略的类型之后，需要构建具体的交易体系来落实自己的策略，实现需求。以下是几个通常需要考虑的因素：

　　(1)选股

　　在量化交易中，选股的方式有两个极端：一个极端是选择哪些因子、如何设定参数、如何组合，都是依靠投资者的个人主观决策，而策略只是以程序化的方式去实现这套主观的规则。另一个极端是把历史数据投喂给“黑匣子”训练，然后从结果中得到回测效果最理想的因子、参数及组合方式。倘若我们好奇的问一下“这个策略为什么回测结果这么牛逼，它的背后逻辑是什么”，你得到的回答可能是“抱歉，我也不知道”。

　　在现实中，大部分量化交易策略的选股逻辑往往介于这两个极端之间的。

　　(2)择时

　　在阿猪看来，择时这个概念与主观交易的联系更大一些。

　　通过选股规则确定了股票池后，股票池中个股的价格水平或者走势可能并不符合我们的预期。这个时候我们并不想立刻下单买入，而是耐心地等待个股的价格水平或者走势符合我们的预期之后再下单。

　　例如：等待指数的价格水平回落到上一个牛市高点的50%以下；等待个股的半年线向上穿越年线；等待个股的PE回落到15以下。

　　(3)资金管理

　　可以简单的把资金管理理解为“我打算分配多少资金给这个策略”。

　　我们可以综合考虑自身的财务状况、投资目标、风险偏好、风险承受能力等，再结合经济周期、金融市场环境等因素确定大类资产配置的类别和比例，确定用于股市投资的资金量。

　　如果资金量较大，而投资标的过于集中，或者市场的流动性较低，还应当考虑策略的市场容量。

　　(4)仓位管理

　　对于给定的资金量，可以结合策略的特性来制定适合的仓位管理规则，从而兼顾风险和收益的平衡。

　　一个好的策略除了应当有尽可能高的交易胜率，还应当让你能够在市场中长期存活下来，确保不会因连续的亏损或者其他极端情况而元气大伤。而仓位管理就是管控风险的重要手段之一。举例如下：

　　假设我们股票账户整体愿意承受的最大亏损是5%，单只股票愿意承受的最大亏损是20%，那么可以将单只股票的持仓上限控制在5%÷20%=25%。

　　假设我们股票账户这个月愿意承受的最大亏损是5%，当前的仓位是20%，当前持仓股的预设止损价位是亏损10%，那么留给我们的可亏损额度就是5%-10%×20%=3%。接下来应当确保每次下单的仓位和预设的止损都应当确保整体账户的潜在亏损不超过5%，否则当月就不应该再下单；对于持仓股，也应当确保整体账户的潜在亏损不超过5%，否则就应该减仓调整。

　　假设我们比较看好一只股票，但是既担心买入后会继续下跌，又担心不买会踏空错过行情。那么可以考虑先买入三分之一，等下跌到一定价位后再买入三分之一，待上涨趋势基本确立后再买入三分之一。

　　(5)止盈止损

　　先来举一个简单的例子：假设我们的选股胜率是60%，每笔交易在亏损10%时止损，而在盈利5%时就止盈，那么从概率的角度来看，这个策略长期的期望收益是5%×60%-10%×40%=-1%。

　　从这个例子可以看出，在选股胜率给定的情况下，止盈止损规则对策略期望收益的影响是显而易见的。而一个好的止盈止损规则，应当能够帮助我们在交易胜率给定的情况下，尽可能的提高策略长期的期望收益。

　　列举几个止盈止损规则：

　　半年线向下击穿年线，可能表示长期上涨趋势结束，清仓止盈。
K线跌破近期的横盘支撑位，可能表示短期将进入下跌行情，清仓止损。

　　此外，止盈止损规则也可以结合仓位管理规则一起使用。例如，如果技术指标显示上涨动力不足，则先卖出一半仓位，锁定利润。如果后市继续上涨，则不会踏空；如果后市继续下跌至预设价位，则卖出剩余仓位。


## 二、梳理策略的代码实现逻辑

　　当我们完成了交易体系的构建后，接下来就是结合Ptrade的策略框架体系来梳理业务流程，将交易体系转化为量化交易策略的代码。（相关链接：<a href="https://quants.site/tutorial/strategy-frame" target="_blank">Ptrade策略框架简介</a>）]]></content><author><name>Zhu</name><email>pub@azhu.site</email></author><category term="tutorial" /><summary type="html"><![CDATA[　　经过前几篇文章的介绍，大家应该已经对Ptrade有了一些基本的了解。接下来让我们尝试构思一个可以真正用来实盘交易的策略。以下是阿猪总结的一些基本思路，供大家参考： 一、明确需求 　　编写量化交易策略的本质仍然是编写程序，所以在动手写代码之前应当先有明确的需求，否则在写代码的时候容易发半天呆却无从下手，或者想一出是一出，影响写代码的效率和代码的质量。 　　思考下边的两个问题，有助于让你明确自己的需求： 1、我希望赚的是什么钱 　　回答“赚什么钱”这个问题，可以帮助你明确自己的策略在大方向上属于哪种类型、什么风格（例如事件驱动、趋势跟随、均值回归、价值投资….） 　　阿猪认为在股市中赚钱主要有两条途径，一是通过价格变动赚钱，二是通过股息红利赚钱。 　　对于通过价格变动获利，阿猪认为从根本上可以分为如下两类： (1)估值水平的变动带动股价的变动。举例如下： 　　在短期，题材炒作、重大的利好利空消息等，往往会导致投资者对某个板块或某只个股的估值偏好发生明显的变化，从而使股价发生大幅的波动。 　　在长期，市场估值偏好会产生周期性的变化，从而使股价产生周期性的波动；投资者会因长期看好/看衰某些行业而产生趋势性的估值偏好变化，从而在盈利水平给定的情况下，使股价产生趋势性的变化。 　　对于给定的行业，业内竞争力强的龙头公司往往会有一定的估值溢价。 (2)盈利水平的变动带动股价的变动。举例如下： 　　对于周期性的行业，行业内公司的盈利水平会呈现出周期性的变动，从而带动股价产生周期性的变动。 　　对于处于长期上升/衰退期间的行业，行业内的公司的盈利水平会呈现出趋势性的变换，从而在估值水平给定的情况下，带动股价产生趋势性的变化。 2、为了赚这个钱，我该如何构建相应的交易体系。 　　在大方向上明确了自己策略的类型之后，需要构建具体的交易体系来落实自己的策略，实现需求。以下是几个通常需要考虑的因素： 　　(1)选股 　　在量化交易中，选股的方式有两个极端：一个极端是选择哪些因子、如何设定参数、如何组合，都是依靠投资者的个人主观决策，而策略只是以程序化的方式去实现这套主观的规则。另一个极端是把历史数据投喂给“黑匣子”训练，然后从结果中得到回测效果最理想的因子、参数及组合方式。倘若我们好奇的问一下“这个策略为什么回测结果这么牛逼，它的背后逻辑是什么”，你得到的回答可能是“抱歉，我也不知道”。 　　在现实中，大部分量化交易策略的选股逻辑往往介于这两个极端之间的。 　　(2)择时 　　在阿猪看来，择时这个概念与主观交易的联系更大一些。 　　通过选股规则确定了股票池后，股票池中个股的价格水平或者走势可能并不符合我们的预期。这个时候我们并不想立刻下单买入，而是耐心地等待个股的价格水平或者走势符合我们的预期之后再下单。 　　例如：等待指数的价格水平回落到上一个牛市高点的50%以下；等待个股的半年线向上穿越年线；等待个股的PE回落到15以下。 　　(3)资金管理 　　可以简单的把资金管理理解为“我打算分配多少资金给这个策略”。 　　我们可以综合考虑自身的财务状况、投资目标、风险偏好、风险承受能力等，再结合经济周期、金融市场环境等因素确定大类资产配置的类别和比例，确定用于股市投资的资金量。 　　如果资金量较大，而投资标的过于集中，或者市场的流动性较低，还应当考虑策略的市场容量。 　　(4)仓位管理 　　对于给定的资金量，可以结合策略的特性来制定适合的仓位管理规则，从而兼顾风险和收益的平衡。 　　一个好的策略除了应当有尽可能高的交易胜率，还应当让你能够在市场中长期存活下来，确保不会因连续的亏损或者其他极端情况而元气大伤。而仓位管理就是管控风险的重要手段之一。举例如下： 　　假设我们股票账户整体愿意承受的最大亏损是5%，单只股票愿意承受的最大亏损是20%，那么可以将单只股票的持仓上限控制在5%÷20%=25%。 　　假设我们股票账户这个月愿意承受的最大亏损是5%，当前的仓位是20%，当前持仓股的预设止损价位是亏损10%，那么留给我们的可亏损额度就是5%-10%×20%=3%。接下来应当确保每次下单的仓位和预设的止损都应当确保整体账户的潜在亏损不超过5%，否则当月就不应该再下单；对于持仓股，也应当确保整体账户的潜在亏损不超过5%，否则就应该减仓调整。 　　假设我们比较看好一只股票，但是既担心买入后会继续下跌，又担心不买会踏空错过行情。那么可以考虑先买入三分之一，等下跌到一定价位后再买入三分之一，待上涨趋势基本确立后再买入三分之一。 　　(5)止盈止损 　　先来举一个简单的例子：假设我们的选股胜率是60%，每笔交易在亏损10%时止损，而在盈利5%时就止盈，那么从概率的角度来看，这个策略长期的期望收益是5%×60%-10%×40%=-1%。 　　从这个例子可以看出，在选股胜率给定的情况下，止盈止损规则对策略期望收益的影响是显而易见的。而一个好的止盈止损规则，应当能够帮助我们在交易胜率给定的情况下，尽可能的提高策略长期的期望收益。 　　列举几个止盈止损规则： 　　半年线向下击穿年线，可能表示长期上涨趋势结束，清仓止盈。 K线跌破近期的横盘支撑位，可能表示短期将进入下跌行情，清仓止损。 　　此外，止盈止损规则也可以结合仓位管理规则一起使用。例如，如果技术指标显示上涨动力不足，则先卖出一半仓位，锁定利润。如果后市继续上涨，则不会踏空；如果后市继续下跌至预设价位，则卖出剩余仓位。 二、梳理策略的代码实现逻辑 　　当我们完成了交易体系的构建后，接下来就是结合Ptrade的策略框架体系来梳理业务流程，将交易体系转化为量化交易策略的代码。（相关链接：Ptrade策略框架简介）]]></summary></entry><entry><title type="html">提示“账户无可转债交易权限，无法进行对应类型交易”</title><link href="http://localhost:4000/faq/convertible-bond-permission" rel="alternate" type="text/html" title="提示“账户无可转债交易权限，无法进行对应类型交易”" /><published>2023-03-28T19:50:30+08:00</published><updated>2023-03-28T19:50:30+08:00</updated><id>http://localhost:4000/faq/convertible-bond-permission</id><content type="html" xml:base="http://localhost:4000/faq/convertible-bond-permission"><![CDATA[<b>问题：</b>

&emsp;&emsp;我的证券账户已经开通了可转债交易权限，为什么使用Ptrade时仍然提示“账户无可转债交易权限，无法进行对应类型交易”？

<br>
<b>原因</b>：

&emsp;&emsp;这里的可转债交易权限指的是使用Ptrade进行可转债交易的权限，而不是你的证券账户的可转债交易权限。Ptrade中的可转债交易权限默认是关闭的。

<br>
<b>解决方法</b>：

&emsp;&emsp;联系你的客户经理，让客户经理为你的Ptrade账号开通可转债交易权限。你可能需要配合填写一些申请材料，并签署一些知晓并愿意承担风险的书面文件。

&emsp;&emsp;在你首次申请开通Ptrade时，申请材料中通常会要求你选择是否同时开通可转债交易权限。建议你一并开通，免去后续再次申请开通的麻烦。]]></content><author><name>Zhu</name><email>pub@azhu.site</email></author><category term="faq" /><summary type="html"><![CDATA[问题：   我的证券账户已经开通了可转债交易权限，为什么使用Ptrade时仍然提示“账户无可转债交易权限，无法进行对应类型交易”？ 原因：   这里的可转债交易权限指的是使用Ptrade进行可转债交易的权限，而不是你的证券账户的可转债交易权限。Ptrade中的可转债交易权限默认是关闭的。 解决方法：   联系你的客户经理，让客户经理为你的Ptrade账号开通可转债交易权限。你可能需要配合填写一些申请材料，并签署一些知晓并愿意承担风险的书面文件。   在你首次申请开通Ptrade时，申请材料中通常会要求你选择是否同时开通可转债交易权限。建议你一并开通，免去后续再次申请开通的麻烦。]]></summary></entry><entry><title type="html">05、Ptrade策略框架简介</title><link href="http://localhost:4000/tutorial/strategy-frame" rel="alternate" type="text/html" title="05、Ptrade策略框架简介" /><published>2023-03-27T19:50:30+08:00</published><updated>2023-03-27T19:50:30+08:00</updated><id>http://localhost:4000/tutorial/strategy-frame</id><content type="html" xml:base="http://localhost:4000/tutorial/strategy-frame"><![CDATA[&emsp;&emsp;初次接触量化交易的朋友，在开始编写自己第一个策略的时候通常会感觉无从下手。而使用过其他量化平台的老手，在使用新平台的时候往往能够很快上手。这主要是因为新手对量化交易系统的策略框架没有概念，而很多量化交易系统的策略框架逻辑往往都是大同小异的。

&emsp;&emsp;以下三点可以帮助新手快速掌握编写Ptrade量化交易策略的原则：

## 一、Ptrade遵循python的语法

&emsp;&emsp;Ptrade的策略是基于python语言的，所以在编写策略时，需要遵循python的语法；遇到报错时，也需要以python的视角去思考分析错误。

&emsp;&emsp;这里假设读者已经掌握了python的基础语法和关于自定义函数的基础知识。

（相关链接：<a href="https://www.runoob.com/python3/python3-basic-syntax.html" target="_blank">python3的基础语法</a>、<a href="https://www.runoob.com/python3/python3-function.html" target="_blank">pyhon3的自定义函数</a>）

## 二、Ptrade有自己的策略框架体系

&emsp;&emsp;Ptrade保留了几个自定义函数，每个保留的自定义函数可以实现一些特定的功能。通过这些自定义函数的巧妙组合，可以实现各种简单或者复杂的量化交易策略。

&emsp;&emsp;下边的图罗列了Ptrade所有保留的自定义函数以及它们的作用。关于它们的用法，请参考API文档以及后续的教程。
（相关链接：<a href="http://121.41.137.161:9091/hub/help/api#%E4%B8%9A%E5%8A%A1%E6%B5%81%E7%A8%8B%E6%A1%86%E6%9E%B6" target="_blank">API文档-业务流程框架</a>）
<div  align="center"><img src="/assets/posts_img/20230327_01.webp" alt="" width="800" height=auto/></div>

### 1、初始化阶段

　　初始化阶段对应API中的initialize()函数，会在策略启动后最先运行，并且只运行一次。initialize()是Ptrade策略的必选函数。

　　初始化阶段的一般作用：

　　(1)为一些基础性的全局变量进行初始化赋值。

　　(2)设置定时任务。（相关链接：<a href="http://121.41.137.161:9091/hub/help/api#定时周期性函数" target="_blank">API文档-定时周期性函数</a>）

　　注意：部分API函数不支持在初始化阶段调用。
<br>

### 2、盘前阶段

　　盘前阶段是指交易日09:15开盘之前的阶段，一般用来更新一些以日为更新频率的全局变量，便于盘中阶段使用。例如我们可以在每个交易日的盘前阶段更新当日的股票池。

　　可以通过before_trading_start()或者run_daily()函数实现在开盘前的固定时间运行。区别对比如下：

<table>
<tbody>
<tr>
<td></td>
<td>before_trading_start()</td>
<td>run_daily()</td>
</tr>

<tr>
<td>首次启动的时间</td>
<td>initialize()函数运行完毕之后立即运行</td>
<td>同“往后启动的时间”</td>
</tr>
<tr>
<td>往后启动的时间</td>
<td>回测模式：08:30<br>交易模式：09:10(以券商的设定为准)</td>
<td>用户自己设定的时间</td>
</tr>
</tbody>
</table>

　　注意：

　　(1)避免在盘前阶段运行耗时过长的代码，以免和盘中阶段相冲突。可考虑放到前一日的盘后阶段。

　　(2)获取行情时，请注意时间上的逻辑关系。例如盘前阶段无法取到当日的开盘价。
<br>

### 3、盘中阶段

　　盘中阶段是指交易日的09:30至15:00，一般用来监控行情报价，并据此产生买卖信号、执行交易。

　　可以通过handle_data()、tick_data()、run_interval()函数来实现盘中定时运行。

区别对比如下：
<table>
<tbody>
<tr>
<td></td>
<td>handle_data()</td>
<td>tick_data()</td>
<td>run_interval()</td>
</tr>

<tr>
<td>支持的模式</td>
<td>回测模式、交易模式</td>
<td>交易模式</td>
<td>交易模式</td>
</tr>

<tr>
<td>支持的周期</td>
<td>1分钟、1天</td>
<td>3秒</td>
<td>自定义（最少3秒）</td>
</tr>

</tbody>
</table>

　　注意：

(1)避免在盘中阶段运行耗时过长的代码，以免造成I/O阻塞、影响时效性。可考虑放到盘前阶段或者前一日的盘后阶段。
<br>

### 4、盘后阶段

　　盘后阶段是指交易日15:00收盘之后的阶段，一般用来执行一些盘后复盘类的任务。

　　可以通过after_trading_end()或者run_daily()函数实现在开盘前的固定时间运行。区别对比如下：

<table>
<tbody>
<tr>
<td></td>
<td>after_trading_end()</td>
<td>run_daily()</td>
</tr>

<tr>
<td>启动的时间</td>
<td>15:30(以券商的设定为准)</td>
<td>用户自己设定的时间</td>
</tr>
</tbody>
</table>

　　注意：

　　(1)日频数据的落库时间不固定，一般在15:30-16:00之间可以完成，但也不排除偶尔会有延误。请考虑将启动时间适当的延后，并且做容错处理。

### 5、一个简单但完整的策略示例

&emsp;&emsp;我们来看一个简单但是结构完整的Ptrade策略示例：
<div  align="center"><img src="/assets/posts_img/20230327_02.webp" alt="" width="600" height=auto/></div>
<br>
&emsp;&emsp;这个策略的周期级别是每日，回测范围是2023/03/15至2023/03/17。策略的代码包含两个Ptrade保留的自定义函数（initialize、before_trading_start）和一个用户自定义函数func1。它的作用是在每一个交易日的固定时间输出显示一次“今天是一个新的交易日”。

&emsp;&emsp;可能你会说：我能认出来这三个都是自定义函数，但我有两件事情没搞明白：

&emsp;&emsp;（1）自定义函数是怎么被触发的，我怎么没看到调用initialize、before_trading_start这两个自定义函数的代码呢？

&emsp;&emsp;（2）initialize、before_trading_start这两个Ptrade保留的自定义函数是怎么实现在固定的时间触发执行的呢？

&emsp;&emsp;这涉及到Ptrade的工作机制。在启动策略时，Ptrade会先启动“策略引擎”，然后再由“策略引擎”来调用我们策略文件中的自定义函数。每个Ptrade保留的自定义函数有什么功能、它们的执行顺序和执行时间是什么，都是在“策略引擎”中定义的。

&emsp;&emsp;如果你是python初学者的话，我建议你先暂停继续学习Ptrade，花点时间了解一下python跨文件调用函数的实现方法。这会帮助你更好的了解Ptrade、python是怎么工作的，进而有能力驾驭更复杂的量化交易策略。

（相关链接：<a href="https://www.baidu.com/s?ie=UTF-8&wd=python%20%E8%B7%A8%E6%96%87%E4%BB%B6%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0" target="_blank">百度-python 跨文件调用函数</a>）

## 三、Ptrade可能存在一些限制和差异

&emsp;&emsp;1、由于Ptrade的策略运行在券商的服务器中，所以出于安全和合规的考虑，券商会限制一些python内置模块和第三方库的使用，并且会限制对外网的访问。视每家券商的配置不同，具体的限制会有差异。

（相关链接：<a href="http://121.41.137.161:9091/hub/help/api#%E6%94%AF%E6%8C%81%E7%9A%84%E4%B8%89%E6%96%B9%E5%BA%93" target="_blank">Ptrade支持的第三方库及其版本</a>）

&emsp;&emsp;2、Ptrade内置的python和部分第三方库的版本较低，在使用时需要注意一下不同版本之间的语法、支持的函数可能会有一些差异。

&emsp;&emsp;经测试，截至2023年3月，Ptrade内置的python版本是3.5.1，而Python官方的最新版本是3.12.0Alpha6。]]></content><author><name>Zhu</name><email>pub@azhu.site</email></author><category term="tutorial" /><summary type="html"><![CDATA[  初次接触量化交易的朋友，在开始编写自己第一个策略的时候通常会感觉无从下手。而使用过其他量化平台的老手，在使用新平台的时候往往能够很快上手。这主要是因为新手对量化交易系统的策略框架没有概念，而很多量化交易系统的策略框架逻辑往往都是大同小异的。   以下三点可以帮助新手快速掌握编写Ptrade量化交易策略的原则： 一、Ptrade遵循python的语法   Ptrade的策略是基于python语言的，所以在编写策略时，需要遵循python的语法；遇到报错时，也需要以python的视角去思考分析错误。   这里假设读者已经掌握了python的基础语法和关于自定义函数的基础知识。 （相关链接：python3的基础语法、pyhon3的自定义函数） 二、Ptrade有自己的策略框架体系   Ptrade保留了几个自定义函数，每个保留的自定义函数可以实现一些特定的功能。通过这些自定义函数的巧妙组合，可以实现各种简单或者复杂的量化交易策略。   下边的图罗列了Ptrade所有保留的自定义函数以及它们的作用。关于它们的用法，请参考API文档以及后续的教程。 （相关链接：API文档-业务流程框架） 1、初始化阶段 　　初始化阶段对应API中的initialize()函数，会在策略启动后最先运行，并且只运行一次。initialize()是Ptrade策略的必选函数。 　　初始化阶段的一般作用： 　　(1)为一些基础性的全局变量进行初始化赋值。 　　(2)设置定时任务。（相关链接：API文档-定时周期性函数） 　　注意：部分API函数不支持在初始化阶段调用。 2、盘前阶段 　　盘前阶段是指交易日09:15开盘之前的阶段，一般用来更新一些以日为更新频率的全局变量，便于盘中阶段使用。例如我们可以在每个交易日的盘前阶段更新当日的股票池。 　　可以通过before_trading_start()或者run_daily()函数实现在开盘前的固定时间运行。区别对比如下： before_trading_start() run_daily() 首次启动的时间 initialize()函数运行完毕之后立即运行 同“往后启动的时间” 往后启动的时间 回测模式：08:30交易模式：09:10(以券商的设定为准) 用户自己设定的时间 　　注意： 　　(1)避免在盘前阶段运行耗时过长的代码，以免和盘中阶段相冲突。可考虑放到前一日的盘后阶段。 　　(2)获取行情时，请注意时间上的逻辑关系。例如盘前阶段无法取到当日的开盘价。 3、盘中阶段 　　盘中阶段是指交易日的09:30至15:00，一般用来监控行情报价，并据此产生买卖信号、执行交易。 　　可以通过handle_data()、tick_data()、run_interval()函数来实现盘中定时运行。 区别对比如下： handle_data() tick_data() run_interval() 支持的模式 回测模式、交易模式 交易模式 交易模式 支持的周期 1分钟、1天 3秒 自定义（最少3秒） 　　注意： (1)避免在盘中阶段运行耗时过长的代码，以免造成I/O阻塞、影响时效性。可考虑放到盘前阶段或者前一日的盘后阶段。 4、盘后阶段 　　盘后阶段是指交易日15:00收盘之后的阶段，一般用来执行一些盘后复盘类的任务。 　　可以通过after_trading_end()或者run_daily()函数实现在开盘前的固定时间运行。区别对比如下： after_trading_end() run_daily() 启动的时间 15:30(以券商的设定为准) 用户自己设定的时间 　　注意： 　　(1)日频数据的落库时间不固定，一般在15:30-16:00之间可以完成，但也不排除偶尔会有延误。请考虑将启动时间适当的延后，并且做容错处理。 5、一个简单但完整的策略示例   我们来看一个简单但是结构完整的Ptrade策略示例：   这个策略的周期级别是每日，回测范围是2023/03/15至2023/03/17。策略的代码包含两个Ptrade保留的自定义函数（initialize、before_trading_start）和一个用户自定义函数func1。它的作用是在每一个交易日的固定时间输出显示一次“今天是一个新的交易日”。   可能你会说：我能认出来这三个都是自定义函数，但我有两件事情没搞明白：   （1）自定义函数是怎么被触发的，我怎么没看到调用initialize、before_trading_start这两个自定义函数的代码呢？   （2）initialize、before_trading_start这两个Ptrade保留的自定义函数是怎么实现在固定的时间触发执行的呢？   这涉及到Ptrade的工作机制。在启动策略时，Ptrade会先启动“策略引擎”，然后再由“策略引擎”来调用我们策略文件中的自定义函数。每个Ptrade保留的自定义函数有什么功能、它们的执行顺序和执行时间是什么，都是在“策略引擎”中定义的。   如果你是python初学者的话，我建议你先暂停继续学习Ptrade，花点时间了解一下python跨文件调用函数的实现方法。这会帮助你更好的了解Ptrade、python是怎么工作的，进而有能力驾驭更复杂的量化交易策略。 （相关链接：百度-python 跨文件调用函数） 三、Ptrade可能存在一些限制和差异   1、由于Ptrade的策略运行在券商的服务器中，所以出于安全和合规的考虑，券商会限制一些python内置模块和第三方库的使用，并且会限制对外网的访问。视每家券商的配置不同，具体的限制会有差异。 （相关链接：Ptrade支持的第三方库及其版本）   2、Ptrade内置的python和部分第三方库的版本较低，在使用时需要注意一下不同版本之间的语法、支持的函数可能会有一些差异。   经测试，截至2023年3月，Ptrade内置的python版本是3.5.1，而Python官方的最新版本是3.12.0Alpha6。]]></summary></entry><entry><title type="html">04、客户端界面综览</title><link href="http://localhost:4000/tutorial/ui-overview" rel="alternate" type="text/html" title="04、客户端界面综览" /><published>2023-03-26T19:50:30+08:00</published><updated>2023-03-26T19:50:30+08:00</updated><id>http://localhost:4000/tutorial/ui-overview</id><content type="html" xml:base="http://localhost:4000/tutorial/ui-overview"><![CDATA[&emsp;&emsp;Ptrade客户端包含行情、交易、工具、量化、日内五个功能模块。

<b>一、量化模块</b>

&emsp;&emsp;本教程主要介绍量化模块的使用，它包含研究、回测、交易、帮助四个子模块。

<b>1、研究模块</b>

&emsp;&emsp;研究模块有两个子模块，一个是文件管理，一个是Jupyter。

（1）Jupyter

&emsp;&emsp;Jupyter是一个流行的交互式笔记本，用户可以直观的看到代码的运行结果，包括变量的计算结果、生成的图形等等。Ptrade客户端中集成了Jupyter的一些基本功能，方便用户进行策略研究和代码调试。
<div  align="center"><img src="/assets/posts_img/20230326_01.webp" alt="" width="600" height=auto/></div>
<br>
（2）文件管理模块

&emsp;&emsp;文件管理模块允许用户在服务器端创建、编辑、管理自己的文件。

&emsp;&emsp;该模块极大的提高了Ptrade的灵活性，例如：用户可以将数据提前保存到研究目录下，回测时直接从研究目录中读取，可以极大的提高回测速度；用户可以将研究目录作为“中转站”，实现跨策略交互数据；用户可以编写脚本定期将外网数据保存到本地，然后通过定时上传功能上传到服务器，间接实现Ptrade服务器与外网间的数据交互自动化。更多的妙用等待你来发现。
<div  align="center"><img src="/assets/posts_img/20230326_02.webp" alt="" width="600" height=auto/></div>
<br>
<b>2、回测模块</b>

&emsp;&emsp;回测模块主要用于策略的代码调试和回测。用户可以根据回测结果对策略进行分析和调整。
<div  align="center"><img src="/assets/posts_img/20230326_03.webp" alt="" width="600" height=auto/></div>
<br>
<b>3、交易模块</b>

&emsp;&emsp;如果你对策略在回测模式下的运行结果感到满意，那么可以考虑在交易模式下运行该策略。交易模式下运行的策略将会产生真实的交易。

&emsp;&emsp;交易模块支持同时运行多个策略。
<div  align="center"><img src="/assets/posts_img/20230326_04.webp" alt="" width="600" height=auto/></div>
<br>
<b>4、帮助</b>

&emsp;&emsp;这里可以查看完整的API文档。
<div  align="center"><img src="/assets/posts_img/20230326_05.webp" alt="" width="600" height=auto/></div>
<br>
<b>二、其他模块</b>

&emsp;&emsp;除了主打的量化功能，Ptrade还提供行情浏览、手工交易等功能。由于这些不是本教程的侧重点，所以后续不再过多介绍，感兴趣的读者可以自行研究。

<b>1、行情模块</b>

&emsp;&emsp;用户可以在这里浏览股票的分时图、K线图、F10信息等，可以进行简单的自选股管理。
<div  align="center"><img src="/assets/posts_img/20230326_06.webp" alt="" width="600" height=auto/></div>
<br>
<b>2、交易模块</b>

&emsp;&emsp;用户可以在这里进行手工下单、查看持仓信息、资金信息、委托信息、成交记录等。
<div  align="center"><img src="/assets/posts_img/20230326_07.webp" alt="" width="600" height=auto/></div>
<br>
<b>3、工具模块</b>

&emsp;&emsp;这里集成了一些主流的手工交易工具，例如网格交易、算法交易等等。
<div  align="center"><img src="/assets/posts_img/20230326_08.webp" alt="" width="600" height=auto/></div>
<br>
<b>4、日内模块</b>

&emsp;&emsp;这里提供了几种快速手工下单的工具。
<div  align="center"><img src="/assets/posts_img/20230326_09.webp" alt="" width="600" height=auto/></div>]]></content><author><name>Zhu</name><email>pub@azhu.site</email></author><category term="tutorial" /><summary type="html"><![CDATA[  Ptrade客户端包含行情、交易、工具、量化、日内五个功能模块。 一、量化模块   本教程主要介绍量化模块的使用，它包含研究、回测、交易、帮助四个子模块。 1、研究模块   研究模块有两个子模块，一个是文件管理，一个是Jupyter。 （1）Jupyter   Jupyter是一个流行的交互式笔记本，用户可以直观的看到代码的运行结果，包括变量的计算结果、生成的图形等等。Ptrade客户端中集成了Jupyter的一些基本功能，方便用户进行策略研究和代码调试。 （2）文件管理模块   文件管理模块允许用户在服务器端创建、编辑、管理自己的文件。   该模块极大的提高了Ptrade的灵活性，例如：用户可以将数据提前保存到研究目录下，回测时直接从研究目录中读取，可以极大的提高回测速度；用户可以将研究目录作为“中转站”，实现跨策略交互数据；用户可以编写脚本定期将外网数据保存到本地，然后通过定时上传功能上传到服务器，间接实现Ptrade服务器与外网间的数据交互自动化。更多的妙用等待你来发现。 2、回测模块   回测模块主要用于策略的代码调试和回测。用户可以根据回测结果对策略进行分析和调整。 3、交易模块   如果你对策略在回测模式下的运行结果感到满意，那么可以考虑在交易模式下运行该策略。交易模式下运行的策略将会产生真实的交易。   交易模块支持同时运行多个策略。 4、帮助   这里可以查看完整的API文档。 二、其他模块   除了主打的量化功能，Ptrade还提供行情浏览、手工交易等功能。由于这些不是本教程的侧重点，所以后续不再过多介绍，感兴趣的读者可以自行研究。 1、行情模块   用户可以在这里浏览股票的分时图、K线图、F10信息等，可以进行简单的自选股管理。 2、交易模块   用户可以在这里进行手工下单、查看持仓信息、资金信息、委托信息、成交记录等。 3、工具模块   这里集成了一些主流的手工交易工具，例如网格交易、算法交易等等。 4、日内模块   这里提供了几种快速手工下单的工具。]]></summary></entry><entry><title type="html">03、登录</title><link href="http://localhost:4000/tutorial/login" rel="alternate" type="text/html" title="03、登录" /><published>2023-03-25T19:50:30+08:00</published><updated>2023-03-25T19:50:30+08:00</updated><id>http://localhost:4000/tutorial/login</id><content type="html" xml:base="http://localhost:4000/tutorial/login"><![CDATA[&emsp;&emsp;双击桌面的“PTrade交易系统”图标即可启动Ptrade客户端。

&emsp;&emsp;首次运行Ptrade时，一般会先运行自动更新程序，需要耐心等待片刻。
<div  align="center"><img src="/assets/posts_img/20230325_01.webp" alt="" width="450" height=auto/></div>
&emsp;&emsp;更新成功后，在登录界面中输入账号、密码，然后点击“登录”按钮即可登录Ptrade。在券商开通Ptrade权限后，客户经理会告知账号和密码。（相关链接：<a href = "/broker/" target="_blank">Ptrade开户</a>）
<div  align="center"><img src="/assets/posts_img/20230325_02.webp" alt="" width="380" height=auto/></div>
<br>

需要注意以下几点：

1、首次使用生产客户端的量化功能时，如果是在非交易时段进行登录，则会提示“没有权限”（具体记不清了，欢迎大家截图反馈）。

&emsp;&emsp;这是因为Ptrade客户端在与服务器通讯时，会先核验本地的token。只有在交易时段进行一次登录，才会在本地生成token。token生成后，后续即可在非交易时段正常使用量化功能。

2、在收盘后登录时，Ptrade会提示“当前为系统清算时段.....”。无需在意这个提示，点击“是”即可继续正常使用。
<div  align="center"><img src="/assets/posts_img/20230325_03.webp" alt="" width="512" height=auto/></div>]]></content><author><name>Zhu</name><email>pub@azhu.site</email></author><category term="tutorial" /><summary type="html"><![CDATA[  双击桌面的“PTrade交易系统”图标即可启动Ptrade客户端。   首次运行Ptrade时，一般会先运行自动更新程序，需要耐心等待片刻。   更新成功后，在登录界面中输入账号、密码，然后点击“登录”按钮即可登录Ptrade。在券商开通Ptrade权限后，客户经理会告知账号和密码。（相关链接：Ptrade开户） 需要注意以下几点： 1、首次使用生产客户端的量化功能时，如果是在非交易时段进行登录，则会提示“没有权限”（具体记不清了，欢迎大家截图反馈）。   这是因为Ptrade客户端在与服务器通讯时，会先核验本地的token。只有在交易时段进行一次登录，才会在本地生成token。token生成后，后续即可在非交易时段正常使用量化功能。 2、在收盘后登录时，Ptrade会提示“当前为系统清算时段…..”。无需在意这个提示，点击“是”即可继续正常使用。]]></summary></entry><entry><title type="html">02、安装客户端</title><link href="http://localhost:4000/tutorial/install" rel="alternate" type="text/html" title="02、安装客户端" /><published>2023-03-24T19:50:30+08:00</published><updated>2023-03-24T19:50:30+08:00</updated><id>http://localhost:4000/tutorial/install</id><content type="html" xml:base="http://localhost:4000/tutorial/install"><![CDATA[&emsp;&emsp;Ptrade由恒生开发、维护，由券商采购并部署到自己的服务器。券商之间的客户端是相互独立的，不通用，所以你需要联系自己的客户经理来获取对应的Ptrade客户端安装包。（相关链接：<a href = "/broker/" target="_blank">Ptrade开户</a>）


&emsp;&emsp;Ptrade的服务器端虽然部署在Linux，但是它的客户端目前仅支持Windows。Ptrade客户端分为仿真、生产两个版本。两者的主要区别在于生产环境是使用你股票资金账户里的真金白银去交易，而仿真环境则不会。所以在前期建议先使用仿真版进行调试代码、回测、模拟交易，当你熟悉了Ptrade，并且确认自己的策略运行稳定、收益较理想后，再去生产环境进行实盘交易。

&emsp;&emsp;本文以湘财证券的Ptrade仿真客户端为例，介绍Ptrade客户端的安装过程。生产客户端的安装过程相同，不再赘述。

1、双击exe格式的安装向导程序，出现如下界面。依次点击‘“下一步”按钮即可。


<div  align="center"><img src="/assets/posts_img/20230324_01.webp" alt="" width="512" height=auto/></div>


2、在“选择目标位置”这里，我们可以看到程序的默认安装目录是在系统盘里边。

&emsp;&emsp;考虑到后续使用过程中程序可能会占用一定的硬盘存储空间，所以建议将程序的安装目录修改为其他非系统分区。点击“浏览”按钮，然后选择其他的磁盘分区，再点击“确定”即可完成修改。


<div  align="center"><img src="/assets/posts_img/20230324_02.webp" alt="" width="512" height=auto/></div>


3、继续点击“下一步”，直到看到“完成”提示。

&emsp;&emsp;此时Ptrade已经安装成功，点击“完成”按钮即可退出安装向导。


<div  align="center"><img src="/assets/posts_img/20230324_03.webp" alt="" width="512" height=auto/></div>]]></content><author><name>Zhu</name><email>pub@azhu.site</email></author><category term="tutorial" /><summary type="html"><![CDATA[  Ptrade由恒生开发、维护，由券商采购并部署到自己的服务器。券商之间的客户端是相互独立的，不通用，所以你需要联系自己的客户经理来获取对应的Ptrade客户端安装包。（相关链接：Ptrade开户）   Ptrade的服务器端虽然部署在Linux，但是它的客户端目前仅支持Windows。Ptrade客户端分为仿真、生产两个版本。两者的主要区别在于生产环境是使用你股票资金账户里的真金白银去交易，而仿真环境则不会。所以在前期建议先使用仿真版进行调试代码、回测、模拟交易，当你熟悉了Ptrade，并且确认自己的策略运行稳定、收益较理想后，再去生产环境进行实盘交易。   本文以湘财证券的Ptrade仿真客户端为例，介绍Ptrade客户端的安装过程。生产客户端的安装过程相同，不再赘述。 1、双击exe格式的安装向导程序，出现如下界面。依次点击‘“下一步”按钮即可。 2、在“选择目标位置”这里，我们可以看到程序的默认安装目录是在系统盘里边。   考虑到后续使用过程中程序可能会占用一定的硬盘存储空间，所以建议将程序的安装目录修改为其他非系统分区。点击“浏览”按钮，然后选择其他的磁盘分区，再点击“确定”即可完成修改。 3、继续点击“下一步”，直到看到“完成”提示。   此时Ptrade已经安装成功，点击“完成”按钮即可退出安装向导。]]></summary></entry><entry><title type="html">01、前言</title><link href="http://localhost:4000/tutorial/preface" rel="alternate" type="text/html" title="01、前言" /><published>2023-03-23T19:50:30+08:00</published><updated>2023-03-23T19:50:30+08:00</updated><id>http://localhost:4000/tutorial/preface</id><content type="html" xml:base="http://localhost:4000/tutorial/preface"><![CDATA[&emsp; &emsp;Ptrade是国内金融IT大厂恒生电子旗下的一款面向个人投资者的量化交易系统，它是目前国内最主流的两个量化交易平台之一（另一个是QMT），主要优缺点总结如下：


<table><tbody><tr><td>优点</td><td>缺点</td></tr><tr><td>合作券商多，开通门槛低</td><td>客户端的代码编辑界面简陋，不如本地纯IDE环境便利</td></tr><tr><td>数据质量高</td><td>券商服务器出于安全考虑，限制较多，不如本地环境灵活。</td></tr><tr><td>大厂出品，更新维护有保障</td><td>python和第三方库的版本更新慢</td></tr><tr><td>策略托管在券商的服务器，本地不开机策略也照常运行</td><td></td></tr><tr><td>策略托管在券商的服务器，大大节省API通讯的时间，提高策略运行效率</td><td></td></tr></tbody></table>

&emsp; &emsp;Ptrade同时支持手工交易和量化交易。

&emsp; &emsp;手工交易下，有丰富的交易工具（例如ETF趋势交易、网格交易、可转债套利、盘口扫单、算法交易、抢单交易、追涨停、快速下单等）；量化交易下，支持研究、回测、交易三种模式。

&emsp; &emsp;本教程主要介绍量化交易方面的入门知识。]]></content><author><name>Zhu</name><email>pub@azhu.site</email></author><category term="tutorial" /><summary type="html"><![CDATA[   Ptrade是国内金融IT大厂恒生电子旗下的一款面向个人投资者的量化交易系统，它是目前国内最主流的两个量化交易平台之一（另一个是QMT），主要优缺点总结如下： 优点缺点合作券商多，开通门槛低客户端的代码编辑界面简陋，不如本地纯IDE环境便利数据质量高券商服务器出于安全考虑，限制较多，不如本地环境灵活。大厂出品，更新维护有保障python和第三方库的版本更新慢策略托管在券商的服务器，本地不开机策略也照常运行策略托管在券商的服务器，大大节省API通讯的时间，提高策略运行效率    Ptrade同时支持手工交易和量化交易。    手工交易下，有丰富的交易工具（例如ETF趋势交易、网格交易、可转债套利、盘口扫单、算法交易、抢单交易、追涨停、快速下单等）；量化交易下，支持研究、回测、交易三种模式。    本教程主要介绍量化交易方面的入门知识。]]></summary></entry></feed>